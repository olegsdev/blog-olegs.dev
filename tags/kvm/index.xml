<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kvm on Linux, QA, Web Dev | Tech Blog</title>
    <link>https://olegs.dev/tags/kvm/</link>
    <description>Recent content in kvm on Linux, QA, Web Dev | Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2021, Oleg Sarbaev; all rights reserved.</copyright>
    <lastBuildDate>Sun, 24 Jan 2021 17:56:11 -0800</lastBuildDate><atom:link href="https://olegs.dev/tags/kvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Home Lab (v2)</title>
      <link>https://olegs.dev/post/my-home-lab/</link>
      <pubDate>Sun, 24 Jan 2021 17:56:11 -0800</pubDate>
      
      <guid>https://olegs.dev/post/my-home-lab/</guid>
      <description>
        
          &lt;h2 id=&#34;idea&#34;&gt;Idea&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://olegs.dev/images/2021/RaspberryPi4.jpg&#34; alt=&#34;Raspberry Pi + SSD&#34;&gt;&lt;/p&gt;
&lt;p&gt;At the beginning it was just a file server on Raspberry Pi 4 + SSD with installed &lt;a href=&#34;https://nextcloud.com/&#34;&gt;NextCloud server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then I needed a Virtualization Server where I could quickly deploy vm to test various software.&lt;br&gt;
For this I chose KVM - as a hypervisor and LXC(LXD) for lightweight containers. LXC is good for simple servers like Nginx or Mysql, KVM for more complex system like FreeIPA Server, Docker, Kubernetes and others.&lt;br&gt;
&lt;a href=&#34;https://ubuntu.com/&#34;&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/a&gt; as a operating system.&lt;br&gt;
&lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;&lt;strong&gt;Vagrant&lt;/strong&gt;&lt;/a&gt; to manage virtual machines.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.linux-kvm.org/page/Main_Page&#34;&gt;&lt;strong&gt;KVM&lt;/strong&gt;&lt;/a&gt; (for Kernel-based Virtual Machine) is a full virtualization solution for Linux on x86 hardware containing virtualization extensions (Intel VT or AMD-V). Using KVM, one can run multiple virtual machines running unmodified Linux or Windows images. Each virtual machine has private virtualized hardware: a network card, disk, graphics adapter, etc.&lt;/p&gt;
&lt;p&gt;Canonical call &lt;strong&gt;LXD&lt;/strong&gt; the &lt;a href=&#34;https://ubuntu.com/server/docs/containers-lxd&#34;&gt;&amp;quot;lightervisor&amp;quot;&lt;/a&gt;. It offers a user experience similar to virtual machines but using Linux containers instead. LXD uses LXC through liblxc and its Go binding to create and manage the containers. It&#39;s basically an alternative to LXC&#39;s tools and distribution template system with the added features that come from being controllable over the network.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware:&lt;/h2&gt;
&lt;p&gt;I was planning to use an HP Server(ProLiant DL165 G7), but due to a lot of noise and since I didn’t need too much resources, I chose a simple old desktop Dell Optiplex 9020. (Intel Core I5-4570 3.20 GHz, 16Gb RAM)
&lt;img src=&#34;https://olegs.dev/images/2021/dell_home_lab.jpg&#34; alt=&#34;Dell Optiplex 9020&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;network--dns&#34;&gt;Network + DNS:&lt;/h2&gt;
&lt;p&gt;All traffic go through &lt;a href=&#34;https://www.dlink.ru/mn/products/5/1608.html&#34;&gt;D-Link DIR-835&lt;/a&gt; with installed &lt;a href=&#34;https://openwrt.org/&#34;&gt;OpenWrt&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;OpenWrt&lt;/strong&gt; provides many capabilities found only in high-end devices and offers good secure level by default. Thanks to additional packages, you can configure monitoring and traffic analysis, and much more.
&lt;img src=&#34;https://olegs.dev/images/2021/openwrt-logo.png&#34; alt=&#34;D-Link DIR-835 + OpenWrt&#34;&gt;
&lt;a href=&#34;https://pi-hole.net/&#34;&gt;&lt;strong&gt;Pi-hole&lt;/strong&gt;&lt;/a&gt; is Network-wide ad blocking system, but I also using it as a local DNS server. In OpenWrt needs to add Pi-hole IP as a different DNS servers for all DHCP clients.&lt;br&gt;
( LuCI: Network -&amp;gt; Interfaces -&amp;gt; LAN -&amp;gt; Edit -&amp;gt; scroll down to DHCP server -&amp;gt; Advanced settings -&amp;gt; look under DHCP-Options )&lt;br&gt;
&lt;img src=&#34;https://olegs.dev/images/2021/pihole.png&#34; alt=&#34;Pi-hole dashboard&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;instalation&#34;&gt;Instalation:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#KVM&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;sudo apt install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;sudo usermod -aG libvirt &lt;span class=&#34;nv&#34;&gt;$USER&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;sudo usermod -aG kvm &lt;span class=&#34;nv&#34;&gt;$USER&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#LXD is installed by default in Ubuntu as a snap package just need to run:&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;lxd init
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#Vagrant &lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;wget https://releases.hashicorp.com/vagrant/2.2.14/vagrant_2.2.14_x86_64.deb
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;sudo apt install ./vagrant_2.2.14_x86_64.deb
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;sudo apt install qemu libvirt-daemon-system libvirt-clients &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;	ebtables dnsmasq-base  libxslt-dev libxml2-dev libvirt-dev &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;	zlib1g-dev ruby-dev ruby-libvirt build-essential
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;vagrant plugin install vagrant-libvirt
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;#Network bridge&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;sudo vim /etc/netplan/00-installer-config.yaml
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;	network:
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;	  version: &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;	  &lt;span class=&#34;c1&#34;&gt;# renderer: networkd&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;	  ethernets:
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;	    eno1:
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;	      dhcp4: no
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;	      dhcp6: no
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt; 	
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;	  bridges:
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;	    br0:
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;	      interfaces: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;eno1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;	      dhcp4: no
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;	      addresses: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.10.10/24&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;	      gateway4: 192.168.10.1
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;	      nameservers:
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;	        addresses: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;192.168.10.1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;sudo netplan apply
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;sudo timedatectl set-timezone America/Los_Angeles
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h2&gt;
&lt;p&gt;For monitoring I&#39;m using &lt;strong&gt;&lt;a href=&#34;https://www.monitorix.org/&#34;&gt;Monitorix&lt;/a&gt;&lt;/strong&gt;.  It is a free, open source, lightweight system monitoring tool designed to monitor as many services and system resources as possible. It has been created to be used under production Linux/UNIX servers, but due to its simplicity and small size can be used on embedded devices as well.&lt;br&gt;
&lt;img src=&#34;https://olegs.dev/images/2021/monitorix_cpu.png&#34; alt=&#34;Monitorix CPU and memory&#34;&gt;&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
